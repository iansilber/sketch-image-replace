@import "scripts/utility.js";
@import "scripts/sandbox.js";
@import "scripts/settings.js";

var clearStoredDirectory = function(context) {

	var MySettings = new Settings(context)

	var panel = [NSOpenPanel openPanel];
	var imageFileNames = [];
	[panel setCanChooseFiles:false];
	[panel setMessage:"Choose the folder you would like to use for image replacement"];
	[panel setCanChooseDirectories:true];
	[panel setAllowsMultipleSelection:false]; // yes if more than one dir is allowed
	[panel setPrompt:"Use this Directory"]

	var clicked = [panel runModal];

	if (clicked == NSFileHandlingPanelOKButton) {
		var selectedDirectory = [[panel URLs] objectAtIndex:0];
		MySettings.set("directory", [NSString stringWithFormat:"%@", [selectedDirectory path]])

		var target = [[[NSURL fileURLWithPath:[selectedDirectory path]] URLByStandardizingPath] URLByResolvingSymlinksInPath]
		var Sandbox = new AppSandbox(context)
		Sandbox.save_bookmark(target)
	}

	var app = [NSApplication sharedApplication];
	var doc = context.document
    [doc showMessage:"The default directory has been set"]
}

var onRun = function(context) {

	var MySettings = new Settings(context)
    var directory = MySettings.get("directory");

	if (directory == null) {
		var alert = [[NSAlert alloc] init]
		[alert setMessageText:"Setup"]
		[alert setInformativeText:"Choose a directory containing images. You can change this at any time by going to Image Replace > Settings."]
		[alert addButtonWithTitle:'Continue...']
		var responseCode = [alert runModal]

		this.clearStoredDirectory(context)
		directory = MySettings.get("directory")
	}

	new AppSandbox(context).authorize(directory, function() {
		getFilesAndReplace(directory, context)
	})
}