@import "scripts/utility.js";

// Primary method. Pulls a collection of randomly selected images from a user-configured directory.
var onRun = function(context) {

	var directory = [[NSUserDefaults standardUserDefaults] objectForKey:"directory"]

	if (directory == null) {
		var alert = [[NSAlert alloc] init]
		[alert setMessageText:"Setup"]
		[alert setInformativeText:"Choose a directory containing images. You can change this at any time by going to Image Replace > Settings."]
		[alert addButtonWithTitle:'Continue...']
		var responseCode = [alert runModal]

		this.resetDefaultDirectory(context)
		directory = [[NSUserDefaults standardUserDefaults] objectForKey:"directory"]
	}

	getFilesAndReplace(directory, context)
}

var replaceWithPicker = function(context) {

	var panel = showFileBrowserAndRequireDirectory(false);

	if (panel.response == NSFileHandlingPanelOKButton) {
		var thePanel = panel.panel;
		var isDirectory = false;
		var firstURL = [[thePanel URLs] objectAtIndex:0];
		var firstURLPath = [NSString stringWithFormat:@"%@", firstURL];

		//directory
		if ([firstURLPath hasSuffix:@"/"]) { 
			getFilesAndReplace([firstURL path], context)

		//files
		} else {
			var imageFileNames = []
			var loop = [[thePanel URLs] objectEnumerator];
			while (url = [loop nextObject]) {
				imageFileNames.push([url path]);
			}
			replaceWithImages(imageFileNames, context);
		}
	}
}

// Reset the default directory.
var resetDefaultDirectory = function(context) {

	var panel = showFileBrowserAndRequireDirectory(true)

	if (panel.response == NSFileHandlingPanelOKButton) {
		var thePanel = panel.panel
		var selectedDirectory = [[thePanel URLs] objectAtIndex:0];
		[[NSUserDefaults standardUserDefaults] setObject:[selectedDirectory path] forKey:"directory"]
		var target = [[[NSURL fileURLWithPath:[selectedDirectory path]] URLByStandardizingPath] URLByResolvingSymlinksInPath]
	}

	var app = [NSApplication sharedApplication];
	var doc = context.document
    [doc showMessage:"The default directory has been set"]
}

